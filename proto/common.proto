/*
 *  Copyright (c) 2020 NetEase Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

syntax="proto2";

package curve.common;

option cc_generic_services = true;
option go_package = "proto/common";

// 1. In the braft scenario: 'id' is not used, and 'address' is the PeerId within braft, in the format {ip}:{port}:{index}.
// 2. In the curve-raft scenario: 'id' represents the peer id, and 'address' is in the format {ip}:{port}.
// The current chunkserver id is the peer id.
message Peer {
    optional uint64 id          = 1;    // Peer ID, globally unique
//  optional bool isLearner     = 2;    // Whether it is a learner (not supported for now)
    optional string address     = 3;    // Address information of the peer
}

message CopysetInfo {
    required uint32 logicalPoolId = 1;
    required uint32 copysetId = 2;
    optional bool scaning = 3;
    optional uint64 lastScanSec = 4;
    optional bool lastScanConsistent = 5;
}

message ChunkServerLocation {
    required uint32 chunkServerID = 1;
    required string hostIp = 2;
    required uint32 port = 3;
    optional string externalIp = 4;
}

