/*
 *  Copyright (c) 2020 NetEase Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * Project: curve
 * Created Date: 2020-01-02
 * Author: lixiaocui
 */

syntax="proto2";
package curve.mds.schedule;

option cc_generic_services = true;

message RapidLeaderScheduleRequst {
    required uint32 logicalPoolID = 1;
}

message RapidLeaderScheduleResponse {
    required sint32 statusCode = 1;
}

// 如果chunkServerID为空，则返回所有chunkserver的恢复状态
message QueryChunkServerRecoverStatusRequest {
    repeated uint32 chunkServerID = 1;
}

message QueryChunkServerRecoverStatusResponse {
    required sint32 statusCode = 1;
    map<uint32, bool> recoverStatusMap = 2;
}

message CancelScanScheduleRequest {
    required  uint32 logicalPoolID = 1;        
}

message CancelScanScheduleResponse {
    required sint32 statusCode = 1;    
}

service ScheduleService {
    rpc RapidLeaderSchedule(RapidLeaderScheduleRequst) returns (RapidLeaderScheduleResponse);
    rpc QueryChunkServerRecoverStatus(QueryChunkServerRecoverStatusRequest) returns (QueryChunkServerRecoverStatusResponse);
    rpc CancelScanSchedule(CancelScanScheduleRequest) returns (CancelScanScheduleResponse);
}
