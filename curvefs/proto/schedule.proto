/*
 *  Copyright (c) 2021 NetEase Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

syntax="proto2";
package curvefs.mds.schedule;

option cc_generic_services = true;
option go_package = "curvefs/proto/schedule";

enum ScheduleStatusCode {
    Success = 0;
    InvalidQueryMetaserverID = 1;
}

// if metaServerID is empty, then return all metaserver status
message QueryMetaServerRecoverStatusRequest {
    repeated uint32 metaServerID = 1;
}

message QueryMetaServerRecoverStatusResponse {
    required ScheduleStatusCode statusCode = 1;
    map<uint32, bool> recoverStatusMap = 2;
}

service ScheduleService {
    rpc QueryMetaServerRecoverStatus(QueryMetaServerRecoverStatusRequest) returns (QueryMetaServerRecoverStatusResponse);
}
