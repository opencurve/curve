# nebd part2的进程名字
part2ProcName=nebd-server
# nebd part2的程序的启动路径，从该路径拉起part2
part2ProcPath=/usr/bin/nebd-server
# nebd part2的ip地址
part2Addr=127.0.0.1
# kill part2服务之后，检查part2服务是否存活的重试次数
part2KillCheckRetryTimes=150
# kill part2服务之后，检查part2服务是否存活的重试间隔，单位Us
part2KillCheckRetryIntervalUs=200000
# nebd part1的qemu进程的名字
qemuProcName=qemu-system-x86_64
# nebd part1和part2共用的文件锁文件的路径
lockFile=/tmp/nebd-server.port.file.lock
# nebd part1和part2共用的元数据文件的目录
metadataPrefix=/var/run/nebd-server/
# 拉起part2服务的重试次数
part2StartRetryTimes=150
# 拉起part2服务的重试间隔，单位Us
part2StartRetryIntervalUs=200000
# 检查part2的port是否联通的重试次数
connectibleCheckTimes=150
# 检查part2的port是否联通的重试间隔，单位Us
connectibleCheckIntervalUs=200000
# 获取part2的port的重试次数
portGetRetryTimes=150
# 获取part2的port的重试间隔，单位Us
portGetRetryIntervalUs=200000
# 心跳服务的检查间隔，单位Us
heartbeatIntervalUs=1000000
# 非io的rpc请求的异常重试次数
rpcRetryTimes=50
# rpc请求的重试间隔，包括io请求和非io请求
rpcRetryIntervalUs=2000000
# rpc请求的重试间隔，当io请求遇到server服务未启动的时候使用这个重试间隔，
# 这个值一般比rpcRetryIntervalUs更小，为了更快恢复io服务
rpcHostDownRetryIntervalUs=200000
# rpc请求的最大重试间隔
rpcRetryMaxIntervalUs=64000000
# rpc请求的超时时间，单位Ms
rpcTimeoutMs=30000
# brpc的健康检查周期时间，单位s
rpcHealthCheckIntervalS=1
# 异步IO操作RPC失败日志打印间隔，每隔多少次打印一次
aioRpcFailLogInterval=10
# 加文件锁的重试次数
fileLockRetryTimes=150
# 加文件锁的重试间隔，单位Us
fileLockRetryIntervalUs=200000