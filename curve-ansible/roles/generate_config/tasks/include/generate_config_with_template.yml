---
#
#  Copyright (c) 2020 NetEase Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

- name: get config dir
  shell: dirname {{ conf_path }}
  register: dirname_res

- name: create config dir
  vars:
    dir_name: "{{ dirname_res.stdout }}"
  include_tasks: common_tasks/create_dir.yml

- name: generate configuration file directly
  ignore_errors: true
  template: src={{ template_name }}.j2 dest={{ conf_path }} mode=0644 backup=true
  register: template_res

- name: print diff if config file change
  block:
    - name: diff two files
      ignore_errors: true
      shell: diff {{ template_res.backup_file }} {{ conf_path }}
      register: diff_res
    - name: print diff
      debug:
        var: diff_res.stdout_lines
  when: template_res.backup_file is defined

- name: generate configuration file with sudo
  block:
    - name: generate configuration file at /tmp
      template: src={{ template_name }}.j2 dest=/tmp/{{ template_name }} mode=0644
    - name: set backup true
      set_fact:
        backup: true
    - name: check config file exist
      stat:
        path: "{{ conf_path }}"
      register: file_status
    - name: backup config file
      shell: sudo cp {{ conf_path }} {{ conf_path }}.bak
      when: backup is defined and file_status.stat.exists
    - name: mv config file
      shell: sudo mv /tmp/{{ template_name }} {{ conf_path }}
    - name: diff two files
      ignore_errors: true
      shell: diff {{ conf_path }}.bak {{ conf_path }}
      register: diff_res
      when: backup is defined
    - name: print diff
      debug:
        var: diff_res.stdout_lines
      when: backup is defined and diff_res.rc != 0
  when: template_res.failed
