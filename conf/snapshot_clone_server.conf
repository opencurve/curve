#
# curvefs client options
#
# Client configuration file location
client.config_path=conf/cs_client.conf  # __CURVEADM_TEMPLATE__ ${prefix}/conf/snap_client.conf __CURVEADM_TEMPLATE__
# Mds root username
mds.rootUser=root
# Mds root password
mds.rootPassword=root_password
# The total retry time for calling the client method
client.methodRetryTimeSec=300
# Call client method retry interval
client.methodRetryIntervalMs=5000

# Log file location
log.dir=./  # __CURVEADM_TEMPLATE__ ${prefix}/logs __CURVEADM_TEMPLATE__

#
# S3 config path
#
s3.config_path=./conf/s3.conf  # __CURVEADM_TEMPLATE__ ${prefix}/conf/s3.conf __CURVEADM_TEMPLATE__
#
#server options
#
# for snapshot
server.address=127.0.0.1:5556  # __CURVEADM_TEMPLATE__ ${service_addr}:${service_port} __CURVEADM_TEMPLATE__
server.subnet=127.0.0.0/24
server.port=5556  # __CURVEADM_TEMPLATE__ ${service_port} __CURVEADM_TEMPLATE__
# Total retry time for calling client asynchronous methods
server.clientAsyncMethodRetryTimeSec=300
# Call client asynchronous method retry interval
server.clientAsyncMethodRetryIntervalMs=5000
# Number of snapshot worker threads
server.snapshotPoolThreadNum=256
# Scanning cycle of snapshot background thread scanning waiting queue and work queue (unit: ms)
server.snapshotTaskManagerScanIntervalMs=1000
# Dump chunk shard size
# for nos, pls set to 1048576
server.chunkSplitSize=8388608
# CheckSnapShotStatus call interval
server.checkSnapshotStatusIntervalMs=1000
# Maximum Snapshots
server.maxSnapshotLimit=1024
# Number of threads simultaneously executing dump
server.snapshotCoreThreadNum=64
# Mds session time
server.mdsSessionTimeUs=5000000
# Number of snapshot shards per thread that simultaneously perform ReadChunkSnapshots and dumps
server.readChunkSnapshotConcurrency=16

# for clone
# Number of thread pool threads used for Lazy clone metadata section
server.stage1PoolThreadNum=256
# Number of thread pool threads used for Lazy clone data section
server.stage2PoolThreadNum=256
# Number of thread pool threads used for requests for non Lazy clones and deletion of clones and other control surfaces
server.commonPoolThreadNum=256
# CloneTaskManager backend thread scan interval
server.cloneTaskManagerScanIntervalMs=1000
# Clone chunk shard size
# for nos, pls set to 65536
server.cloneChunkSplitSize=1048576
# Clone temporary directory
server.cloneTempDir=/clone
# Number of asynchronous requests made simultaneously by CreateCloneChunk
server.createCloneChunkConcurrency=64
# Number of asynchronous requests simultaneously made by RecoverChunk
server.recoverChunkConcurrency=64
# CloneServiceManager reference counting background scan every record interval
server.backEndReferenceRecordScanIntervalMs=500
# CloneServiceManager Reference Count Background Scan Every Record Interval
server.backEndReferenceFuncScanIntervalMs=3600000

#
# ETCD related configurations
#
# ETCD address
etcd.endpoint=127.0.0.1:2379  # __CURVEADM_TEMPLATE__ ${cluster_etcd_addr} __CURVEADM_TEMPLATE__
# The timeout period for establishing a connection with a client
etcd.dailtimeoutMs=5000
# The timeout period for client to perform put/get/txn and other operations
etcd.operation.timeoutMs=5000
# The number of times a client operation failed and can be retried
etcd.retry.times=3
# wait dlock timeout
etcd.dlock.timeoutMs=10000
# dlock lease timeout
etcd.dlock.ttlSec=10

#
# Leader election related parameters
#
# Leader lock name
leader.campagin.prefix=snapshotcloneserverleaderlock
# During the leader election, a session is created in seconds (the unit of the value for the interface of the go code is s)
# This value is related to the ETCD cluster selection timeout
# The server side of ETCD limits this value to a minimum of 1.5 * election timeout
# Suggest setting the ETCD cluster selection timeout to 1 second
leader.session.intersec=5
# The timeout period for the leader election. If it is 0 and the election is unsuccessful, it will continue to block. If it is greater than 0, it will be in the selectionTimeoutMs time
# If a leader is not selected, an error will be returned
leader.election.timeoutms=0

#
# Dummyserver related configurations
#
server.dummy.listen.port=8081   # __CURVEADM_TEMPLATE__ ${service_dummy_port} __CURVEADM_TEMPLATE__
